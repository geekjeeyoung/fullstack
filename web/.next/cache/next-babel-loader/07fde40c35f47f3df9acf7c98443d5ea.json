{"ast":null,"code":"import _defineProperty from \"/Users/candicehan/Documents/geekjeeyoung/lireddit/web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectDestructuringEmpty from \"/Users/candicehan/Documents/geekjeeyoung/lireddit/web/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/candicehan/Documents/geekjeeyoung/lireddit/web/src/pages/register.tsx\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { FormControl, FormLabel, Input, FormErrorMessage, Button } from \"@chakra-ui/react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { Wrapper } from \"../components/Wrapper\";\n\nvar Register = function Register(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    variant: \"small\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        username: \"\",\n        password: \"\"\n      },\n      onSubmit: function onSubmit(values) {\n        console.log(values);\n      },\n      children: function children(_ref2) {\n        var values = _ref2.values,\n            handleChange = _ref2.handleChange;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"username\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              value: values.username,\n              onChange: handleChange,\n              id: \"username\",\n              placeholder: \"username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = Register;\nexport default Register;\n\nfunction FormikExample() {\n  var _this2 = this;\n\n  function validateName(value) {\n    var error;\n\n    if (!value) {\n      error = \"Name is required\";\n    } else if (value !== \"Naruto\") {\n      error = \"Jeez! You're not a fan ðŸ˜±\";\n    }\n\n    return error;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      name: \"Sasuke\"\n    },\n    onSubmit: function onSubmit(values, actions) {\n      setTimeout(function () {\n        alert(JSON.stringify(values, null, 2));\n        actions.setSubmitting(false);\n      }, 1000);\n    },\n    children: function children(props) {\n      return /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"name\",\n          validate: validateName,\n          children: function children(_ref3) {\n            var field = _ref3.field,\n                form = _ref3.form;\n            return /*#__PURE__*/_jsxDEV(FormControl, {\n              isInvalid: form.errors.name && form.touched.name,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                htmlFor: \"name\",\n                children: \"First name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, _this2), /*#__PURE__*/_jsxDEV(Input, _objectSpread(_objectSpread({}, field), {}, {\n                id: \"name\",\n                placeholder: \"name\"\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, _this2), /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n                children: form.errors.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, _this2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, _this2);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, _this2), /*#__PURE__*/_jsxDEV(Button, {\n          mt: 4,\n          colorScheme: \"teal\",\n          isLoading: props.isSubmitting,\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, _this2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, _this2);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = FormikExample;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Register\");\n$RefreshReg$(_c2, \"FormikExample\");","map":{"version":3,"sources":["/Users/candicehan/Documents/geekjeeyoung/lireddit/web/src/pages/register.tsx"],"names":["React","FormControl","FormLabel","Input","FormErrorMessage","Button","Formik","Form","Field","Wrapper","Register","username","password","values","console","log","handleChange","FormikExample","validateName","value","error","name","actions","setTimeout","alert","JSON","stringify","setSubmitting","props","field","form","errors","touched","isSubmitting"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  FormControl,\n  FormLabel,\n  Input,\n  FormErrorMessage,\n  Button,\n} from \"@chakra-ui/react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { Wrapper } from \"../components/Wrapper\";\n\ninterface registerProps {}\n\nconst Register: React.FC<registerProps> = ({}) => {\n  return (\n    <Wrapper variant=\"small\">\n      <Formik\n        initialValues={{ username: \"\", password: \"\" }}\n        onSubmit={(values) => {\n          console.log(values);\n        }}\n      >\n        {({ values, handleChange }) => (\n          <Form>\n            <FormControl>\n              <FormLabel htmlFor=\"username\">Username</FormLabel>\n              <Input\n                value={values.username}\n                onChange={handleChange}\n                id=\"username\"\n                placeholder=\"username\"\n              />\n              {/* <FormErrorMessage>{form.errors.name}</FormErrorMessage> */}\n            </FormControl>\n          </Form>\n        )}\n      </Formik>\n    </Wrapper>\n  );\n};\n\nexport default Register;\n\nfunction FormikExample() {\n  function validateName(value) {\n    let error;\n    if (!value) {\n      error = \"Name is required\";\n    } else if (value !== \"Naruto\") {\n      error = \"Jeez! You're not a fan ðŸ˜±\";\n    }\n    return error;\n  }\n\n  return (\n    <Formik\n      initialValues={{ name: \"Sasuke\" }}\n      onSubmit={(values, actions) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          actions.setSubmitting(false);\n        }, 1000);\n      }}\n    >\n      {(props) => (\n        <Form>\n          <Field name=\"name\" validate={validateName}>\n            {({ field, form }) => (\n              <FormControl isInvalid={form.errors.name && form.touched.name}>\n                <FormLabel htmlFor=\"name\">First name</FormLabel>\n                <Input {...field} id=\"name\" placeholder=\"name\" />\n                <FormErrorMessage>{form.errors.name}</FormErrorMessage>\n              </FormControl>\n            )}\n          </Field>\n          <Button\n            mt={4}\n            colorScheme=\"teal\"\n            isLoading={props.isSubmitting}\n            type=\"submit\"\n          >\n            Submit\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}