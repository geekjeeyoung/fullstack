{"ast":null,"code":"import _slicedToArray from \"/Users/candicehan/Documents/geekjeeyoung/lireddit/web/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"/Users/candicehan/Documents/geekjeeyoung/lireddit/web/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/candicehan/Documents/geekjeeyoung/lireddit/web/src/components/NavBar.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Box, Link, Flex, Button } from \"@chakra-ui/react\";\nimport NextLink from \"next/link\";\nimport { useMeQuery, useLogoutMutation } from \"../generated/graphql\";\nexport var NavBar = function NavBar(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var _useLogoutMutation = useLogoutMutation(),\n      _useLogoutMutation2 = _slicedToArray(_useLogoutMutation, 2),\n      logoutFetching = _useLogoutMutation2[0].fetching,\n      logout = _useLogoutMutation2[1];\n\n  var _useMeQuery = useMeQuery({\n    pause: isServer()\n  }),\n      _useMeQuery2 = _slicedToArray(_useMeQuery, 1),\n      _useMeQuery2$ = _useMeQuery2[0],\n      data = _useMeQuery2$.data,\n      fetching = _useMeQuery2$.fetching;\n\n  var body = null;\n\n  if (fetching) {} else if (!(data === null || data === void 0 ? void 0 : data.me)) {\n    body = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NextLink, {\n        href: \"/login\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          color: \"brown\",\n          mr: 2,\n          children: \"login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(NextLink, {\n        href: \"/register\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          color: \"brown\",\n          children: \"register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true);\n  } else {\n    body = /*#__PURE__*/_jsxDEV(Flex, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        mr: 2,\n        children: data.me.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: function onClick() {\n          logout();\n        },\n        isLoading: logoutFetching,\n        variant: \"link\",\n        children: \"logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    p: 4,\n    bg: \"tan\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      ml: \"auto\",\n      children: body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(NavBar, \"bu7Mo57UkJD6Z7YYu+ueXRjOJFY=\", false, function () {\n  return [useLogoutMutation, useMeQuery];\n});\n\n_c = NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["/Users/candicehan/Documents/geekjeeyoung/lireddit/web/src/components/NavBar.tsx"],"names":["Box","Link","Flex","Button","NextLink","useMeQuery","useLogoutMutation","NavBar","logoutFetching","fetching","logout","pause","isServer","data","body","me","username"],"mappings":";;;;;;;;;AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,MAA1B,QAAwC,kBAAxC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,UAAT,EAAqBC,iBAArB,QAA8C,sBAA9C;AAIA,OAAO,IAAMC,MAA6B,GAAG,SAAhCA,MAAgC,OAAQ;AAAA;;AAAA;;AAAA,2BACJD,iBAAiB,EADb;AAAA;AAAA,MAChCE,cADgC,0BAC1CC,QAD0C;AAAA,MACdC,MADc;;AAAA,oBAEtBL,UAAU,CAAC;AAAEM,IAAAA,KAAK,EAAEC,QAAQ;AAAjB,GAAD,CAFY;AAAA;AAAA;AAAA,MAE1CC,IAF0C,iBAE1CA,IAF0C;AAAA,MAEpCJ,QAFoC,iBAEpCA,QAFoC;;AAGnD,MAAIK,IAAI,GAAG,IAAX;;AACA,MAAIL,QAAJ,EAAc,CACb,CADD,MACO,IAAI,EAACI,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEE,EAAP,CAAJ,EAAe;AACpBD,IAAAA,IAAI,gBACF;AAAA,8BACE,QAAC,QAAD;AAAU,QAAA,IAAI,EAAC,QAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,KAAK,EAAC,OAAZ;AAAoB,UAAA,EAAE,EAAE,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eADF,eAME,QAAC,QAAD;AAAU,QAAA,IAAI,EAAC,WAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,KAAK,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eANF;AAAA,oBADF;AAYD,GAbM,MAaA;AACLA,IAAAA,IAAI,gBACF,QAAC,IAAD;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,kBAAaD,IAAI,CAACE,EAAL,CAAQC;AAArB;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,QAAC,MAAD;AACE,QAAA,OAAO,EAAE,mBAAM;AACbN,UAAAA,MAAM;AACP,SAHH;AAIE,QAAA,SAAS,EAAEF,cAJb;AAKE,QAAA,OAAO,EAAC,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAcD;;AACD,sBACE,QAAC,IAAD;AAAM,IAAA,CAAC,EAAE,CAAT;AAAY,IAAA,EAAE,EAAC,KAAf;AAAA,2BACE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAC,MAAR;AAAA,gBAAgBM;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CAvCM;;GAAMP,M;UACoCD,iB,EAClBD,U;;;KAFlBE,M","sourcesContent":["import { Box, Link, Flex, Button } from \"@chakra-ui/react\";\nimport NextLink from \"next/link\";\nimport { useMeQuery, useLogoutMutation } from \"../generated/graphql\";\n\ninterface NavBarProps {}\n\nexport const NavBar: React.FC<NavBarProps> = ({}) => {\n  const [{ fetching: logoutFetching }, logout] = useLogoutMutation();\n  const [{ data, fetching }] = useMeQuery({ pause: isServer() });\n  let body = null;\n  if (fetching) {\n  } else if (!data?.me) {\n    body = (\n      <>\n        <NextLink href=\"/login\">\n          <Link color=\"brown\" mr={2}>\n            login\n          </Link>\n        </NextLink>\n        <NextLink href=\"/register\">\n          <Link color=\"brown\">register</Link>\n        </NextLink>\n      </>\n    );\n  } else {\n    body = (\n      <Flex>\n        <Box mr={2}>{data.me.username}</Box>\n        <Button\n          onClick={() => {\n            logout();\n          }}\n          isLoading={logoutFetching}\n          variant=\"link\"\n        >\n          logout\n        </Button>\n      </Flex>\n    );\n  }\n  return (\n    <Flex p={4} bg=\"tan\">\n      <Box ml=\"auto\">{body}</Box>\n    </Flex>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}