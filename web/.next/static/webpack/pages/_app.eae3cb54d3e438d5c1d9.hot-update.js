webpackHotUpdate_N_E("pages/_app",{

/***/ "./node_modules/@urql/exchange-graphcache/dist/5301ccd2.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/@urql/exchange-graphcache/dist/5301ccd2.mjs ***!
  \******************************************************************/
/*! exports provided: _ */
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_\", function() { return b; });\nfunction b() {\n  return (b = Object.assign || function(e) {\n    var c, d, a;\n    for (c = 1; c < arguments.length; c++) {\n      d = arguments[c];\n      for (a in d) {\n        Object.prototype.hasOwnProperty.call(d, a) && (e[a] = d[a]);\n      }\n    }\n    return e;\n  }).apply(this, arguments);\n}\n\n\n//# sourceMappingURL=5301ccd2.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B1cnFsL2V4Y2hhbmdlLWdyYXBoY2FjaGUvZGlzdC81MzAxY2NkMi5tanM/OTA0ZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0EsZUFBZSxzQkFBc0I7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVrQjtBQUNsQiIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AdXJxbC9leGNoYW5nZS1ncmFwaGNhY2hlL2Rpc3QvNTMwMWNjZDIubWpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gYigpIHtcbiAgcmV0dXJuIChiID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbihlKSB7XG4gICAgdmFyIGMsIGQsIGE7XG4gICAgZm9yIChjID0gMTsgYyA8IGFyZ3VtZW50cy5sZW5ndGg7IGMrKykge1xuICAgICAgZCA9IGFyZ3VtZW50c1tjXTtcbiAgICAgIGZvciAoYSBpbiBkKSB7XG4gICAgICAgIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChkLCBhKSAmJiAoZVthXSA9IGRbYV0pO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZTtcbiAgfSkuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn1cblxuZXhwb3J0IHsgYiBhcyBfIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD01MzAxY2NkMi5tanMubWFwXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@urql/exchange-graphcache/dist/5301ccd2.mjs\n");

/***/ }),

/***/ "./node_modules/@urql/exchange-graphcache/dist/urql-exchange-graphcache.mjs":
/*!**********************************************************************************!*\
  !*** ./node_modules/@urql/exchange-graphcache/dist/urql-exchange-graphcache.mjs ***!
  \**********************************************************************************/
/*! exports provided: Store, cacheExchange, offlineExchange, query, write */
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Store\", function() { return X; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cacheExchange\", function() { return ib; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"offlineExchange\", function() { return offlineExchange; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"query\", function() { return Xa; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"write\", function() { return Ra; });\n/* harmony import */ var wonka__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! wonka */ \"./node_modules/wonka/dist/wonka.mjs\");\n/* harmony import */ var _urql_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @urql/core */ \"./node_modules/@urql/core/dist/urql-core.mjs\");\n/* harmony import */ var graphql_language_kinds_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql/language/kinds.mjs */ \"./node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql_utilities_valueFromASTUntyped_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql/utilities/valueFromASTUntyped.mjs */ \"./node_modules/graphql/utilities/valueFromASTUntyped.mjs\");\n/* harmony import */ var graphql_language_printer_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! graphql/language/printer.mjs */ \"./node_modules/graphql/language/printer.mjs\");\n/* harmony import */ var _5301ccd2_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./5301ccd2.mjs */ \"./node_modules/@urql/exchange-graphcache/dist/5301ccd2.mjs\");\nfunction n(a) {\n  return a.name.value;\n}\n\nfunction w(a) {\n  return a.selectionSet ? a.selectionSet.selections : [];\n}\n\nfunction aa(a, b) {\n  var e, f, g, h, c = {}, d = 0;\n  if (a.arguments && a.arguments.length) {\n    for (e = 0, f = a.arguments.length; e < f; e++) {\n      null != (h = Object(graphql_utilities_valueFromASTUntyped_mjs__WEBPACK_IMPORTED_MODULE_3__[\"valueFromASTUntyped\"])((g = a.arguments[e]).value, b)) && (c[n(g)] = h, \n      d++);\n    }\n  }\n  return 0 < d ? c : null;\n}\n\nfunction ba(a, b) {\n  var d, e, f, g, h, c = {};\n  if (!b) {\n    return c;\n  }\n  if (a.variableDefinitions) {\n    for (d = 0, e = a.variableDefinitions.length; d < e; d++) {\n      c[g = n((f = a.variableDefinitions[d]).variable)] = void 0 === b[g] && f.defaultValue ? Object(graphql_utilities_valueFromASTUntyped_mjs__WEBPACK_IMPORTED_MODULE_3__[\"valueFromASTUntyped\"])(f.defaultValue, b) : b[g];\n    }\n  }\n  for (h in b) {\n    h in c || (c[h] = b[h]);\n  }\n  return c;\n}\n\nfunction z(a, b) {\n  var c = \"\";\n  b.kind === graphql_language_kinds_mjs__WEBPACK_IMPORTED_MODULE_2__[\"Kind\"].INLINE_FRAGMENT ? c = a ? 'Inline Fragment on \"' + a + '\"' : \"Inline Fragment\" : b.kind === graphql_language_kinds_mjs__WEBPACK_IMPORTED_MODULE_2__[\"Kind\"].OPERATION_DEFINITION ? c = (b.name ? '\"' + b.name.value + '\"' : \"Unnamed\") + \" \" + b.operation : b.kind === graphql_language_kinds_mjs__WEBPACK_IMPORTED_MODULE_2__[\"Kind\"].FRAGMENT_DEFINITION && (c = '\"' + b.name.value + '\" Fragment');\n  c && x.push(c);\n}\n\nfunction da() {\n  return x.length ? \"\\n(Caused At: \" + x.join(\", \") + \")\" : \"\";\n}\n\nfunction A(a, b, c) {\n  if (!a) {\n    throw a = b || \"Minfied Error #\" + c + \"\\n\",  true && (a += da()), \n    (c = Error(a + \"\\nhttps://bit.ly/2XbVrpR#\" + c)).name = \"Graphcache Error\", c;\n  }\n}\n\nfunction B(a, b) {\n  ca.has(a) || (console.warn(a + da() + \"\\nhttps://bit.ly/2XbVrpR#\" + b), ca.add(a));\n}\n\nfunction C(a) {\n  for (var b = 0; b < a.definitions.length; b++) {\n    if (a.definitions[b].kind === graphql_language_kinds_mjs__WEBPACK_IMPORTED_MODULE_2__[\"Kind\"].OPERATION_DEFINITION) {\n      return a.definitions[b];\n    }\n  }\n  A(!1,  true ? \"Invalid GraphQL document: All GraphQL documents must contain an OperationDefinitionnode for a query, subscription, or mutation.\" : undefined, 1);\n}\n\nfunction D(a) {\n  var b, c, d;\n  for (b = {}, c = 0; c < a.definitions.length; c++) {\n    (d = a.definitions[c]).kind === graphql_language_kinds_mjs__WEBPACK_IMPORTED_MODULE_2__[\"Kind\"].FRAGMENT_DEFINITION && (b[n(d)] = d);\n  }\n  return b;\n}\n\nfunction ea(a, b) {\n  var d, e, f, c = a.directives;\n  if (!c) {\n    return !0;\n  }\n  for (d = 0, e = c.length; d < e; d++) {\n    if ((\"include\" === (a = n(f = c[d])) || \"skip\" === a) && f.arguments && f.arguments[0] && \"if\" === n(f.arguments[0])) {\n      return b = Object(graphql_utilities_valueFromASTUntyped_mjs__WEBPACK_IMPORTED_MODULE_3__[\"valueFromASTUntyped\"])(f.arguments[0].value, b), \"include\" === a ? !!b : !b;\n    }\n  }\n  return !0;\n}\n\nfunction fa(a) {\n  for (var b = {}, c = 0; c < a.length; c++) {\n    b[a[c].name] = a[c];\n  }\n  return b;\n}\n\nfunction na(a, b, c) {\n  if (ia.test(c)) {\n    return !0;\n  }\n  return !!(a = oa(a, b, c)) && \"NON_NULL\" !== a.type.kind;\n}\n\nfunction pa(a, b, c) {\n  if (!(a = oa(a, b, c))) {\n    return !1;\n  }\n  return \"LIST\" === (a = \"NON_NULL\" === a.type.kind ? a.type.ofType : a.type).kind && \"NON_NULL\" !== a.ofType.kind;\n}\n\nfunction oa(a, b, c) {\n  qa(a, b);\n  a = a.types[b].fields[c];\n   true && (a || B(\"Invalid field: The field `\" + c + \"` does not exist on `\" + b + \"`, but the GraphQL document expects it to exist.\\nTraversal will continue, however this may lead to undefined behavior!\", 4));\n  return a;\n}\n\nfunction qa(a, b) {\n  A(a.types[b] && \"OBJECT\" === a.types[b].kind,  true ? \"Invalid Object type: The type `\" + b + \"` is not an object in the defined schema, but the GraphQL document is traversing it.\" : undefined, 3);\n}\n\nfunction ra(a) {\n   true && B(\"Invalid resolver: `\" + a + \"` is not in the defined schema, but the `resolvers` option is referencing it.\", 23);\n}\n\nfunction G(a, b) {\n  return b ? a + \"(\" + Object(_urql_core__WEBPACK_IMPORTED_MODULE_1__[\"stringifyVariables\"])(b) + \")\" : a;\n}\n\nfunction sa(a) {\n  var b = a.indexOf(\"(\");\n  return -1 < b ? {\n    fieldKey: a,\n    fieldName: a.slice(0, b),\n    arguments: JSON.parse(a.slice(b + 1, -1))\n  } : {\n    fieldKey: a,\n    fieldName: a,\n    arguments: null\n  };\n}\n\nfunction ta(a, b) {\n  return a.replace(/\\./g, \"%2e\") + \".\" + b;\n}\n\nfunction ua(a) {\n  var b = a.indexOf(\".\");\n  return {\n    entityKey: a.slice(0, b).replace(/%2e/g, \".\"),\n    fieldKey: a = a.slice(b + 1)\n  };\n}\n\nfunction J() {\n  return Object.create(null);\n}\n\nfunction P(a, b, c, d) {\n  K = a;\n  L = b;\n  M = J();\n  O = !!d;\n   true && (x.length = 0);\n  c ? d || 0 < b.optimisticOrder.length ? (d || b.commutativeKeys.has(c) ? d && b.commutativeKeys.delete(c) : va(b, c), \n  N = c, -1 === b.optimisticOrder.indexOf(c) && b.optimisticOrder.unshift(c), b.refLock[c] || (b.refLock[c] = J(), \n  b.links.optimistic[c] = new Map, b.records.optimistic[c] = new Map)) : (N = null, \n  ya(b, c)) : N = null;\n}\n\nfunction Q() {\n   true && Ba();\n  var b = L, c = N;\n  O = !1;\n  N = null;\n  if (c && -1 < b.optimisticOrder.indexOf(c)) {\n    for (c = b.optimisticOrder.length; 0 <= --c && b.refLock[b.optimisticOrder[c]] && b.commutativeKeys.has(b.optimisticOrder[c]); ) {\n      Ca(b.optimisticOrder[c]);\n    }\n  }\n  M = L = K = null;\n   true && (x.length = 0);\n   false || b.defer || (b.defer = !0, Promise.resolve().then((function a() {\n    P(\"read\", b, null);\n    L.gc.forEach(za);\n    !function Aa() {\n      function a(a) {\n        var f, c = ua(a), e = c.entityKey;\n        void 0 !== (f = U(e, c = c.fieldKey)) ? b[a] = \":\" + Object(_urql_core__WEBPACK_IMPORTED_MODULE_1__[\"stringifyVariables\"])(f) : void 0 !== (f = T(e, c)) ? b[a] = Object(_urql_core__WEBPACK_IMPORTED_MODULE_1__[\"stringifyVariables\"])(f) : b[a] = void 0;\n      }\n      if (L.storage) {\n        O = !0;\n        K = \"read\";\n        var b = J();\n        L.persist.forEach(a);\n        O = !1;\n        L.storage.writeData(b);\n        L.persist.clear();\n      }\n    }();\n    Q();\n    b.defer = !1;\n  })));\n}\n\nfunction Ba() {\n  A(null !== M,  true ? \"Invalid Cache call: The cache may only be accessed or mutated duringoperations like write or query, or as part of its resolvers, updaters, or optimistic configs.\" : undefined, 2);\n  return M;\n}\n\nfunction Da(a, b, c, d) {\n  var e = (a = N ? a.optimistic[N] : a.base).get(b);\n  void 0 === e && a.set(b, e = J());\n  void 0 !== d || N ? e[c] = d : delete e[c];\n}\n\nfunction Ea(a, b, c) {\n  var d, e, f, g, h;\n  for (e = 0, f = L.optimisticOrder.length; e < f; e++) {\n    if ((h = a.optimistic[g = L.optimisticOrder[e]]) && (!O || \"write\" === K || L.commutativeKeys.has(g)) && void 0 !== (d = h.get(b)) && c in d) {\n      return d[c];\n    }\n  }\n  return void 0 !== (d = a.base.get(b)) ? d[c] : void 0;\n}\n\nfunction Fa(a, b, c, d) {\n  var e = void 0 !== b[c] ? b[c] : 0;\n  b = b[c] = e + d | 0;\n  void 0 !== a && (0 >= b ? a.add(c) : 0 >= e && 0 < b && a.delete(c));\n}\n\nfunction Ga(a, b, c, d) {\n  var e, f, g;\n  if (\"string\" == typeof c) {\n    Fa(a, b, c, d);\n  } else if (Array.isArray(c)) {\n    for (e = 0, f = c.length; e < f; e++) {\n      (g = c[e]) && Fa(a, b, g, d);\n    }\n  }\n}\n\nfunction Ha(a, b, c) {\n  if (void 0 !== c) {\n    for (var d in c) {\n      b.has(d) || (a.push(sa(d)), b.add(d));\n    }\n  }\n}\n\nfunction Ia(a, b, c, d) {\n  var e, f, g;\n  Ha(a, b, d.base.get(c));\n  for (e = 0, f = L.optimisticOrder.length; e < f; e++) {\n    void 0 !== (g = d.optimistic[L.optimisticOrder[e]]) && Ha(a, b, g.get(c));\n  }\n}\n\nfunction za(a, b, c) {\n  var d, e;\n  if (0 < (L.refCount[a] || 0)) {\n    c.delete(a);\n  } else {\n    for (d in L.refLock) {\n      if (0 < ((b = L.refLock[d])[a] || 0)) {\n        return;\n      }\n      delete b[a];\n    }\n    delete L.refCount[a];\n    c.delete(a);\n    L.records.base.delete(a);\n    if (d = L.links.base.get(a)) {\n      L.links.base.delete(a);\n      for (e in d) {\n        Ga(c, L.refCount, d[e], -1);\n      }\n    }\n  }\n}\n\nfunction R(a, b) {\n  \"__typename\" !== b && (a !== L.queryRootKey ? M[a] = !0 : void 0 !== b && (M[a + \".\" + b] = !0));\n}\n\nfunction T(a, b) {\n  R(a, b);\n  return Ea(L.records, a, b);\n}\n\nfunction U(a, b) {\n  R(a, b);\n  return Ea(L.links, a, b);\n}\n\nfunction V(a, b, c) {\n  R(a, b);\n  !O && L.storage && L.persist.add(ta(a, b));\n  Da(L.records, a, b, c);\n}\n\nfunction Ja(a, b, c) {\n  var e, f, g, d = L;\n  if (N) {\n    e = d.refLock[N] || (d.refLock[N] = J());\n    f = d.links.optimistic[N];\n  } else {\n    e = d.refCount;\n    f = d.links.base;\n    g = d.gc;\n  }\n  f = (f = f && f.get(a)) && f[b];\n  R(a, b);\n  !O && L.storage && L.persist.add(ta(a, b));\n  Da(d.links, a, b, c);\n  Ga(g, e, f, -1);\n  Ga(g, e, c, 1);\n}\n\nfunction va(a, b) {\n  var c = a.optimisticOrder.indexOf(b);\n  -1 === c ? a.optimisticOrder.unshift(b) : a.commutativeKeys.has(b) || (Ka(a, b), \n  a.optimisticOrder.splice(c, 1), a.optimisticOrder.unshift(b));\n  a.commutativeKeys.add(b);\n}\n\nfunction Ka(a, b) {\n  a.refLock[b] && (delete a.refLock[b], delete a.records.optimistic[b], delete a.links.optimistic[b]);\n}\n\nfunction ya(a, b) {\n  var c = a.optimisticOrder.indexOf(b);\n  -1 < c && (a.optimisticOrder.splice(c, 1), a.commutativeKeys.delete(b));\n  Ka(a, b);\n}\n\nfunction La(a, b) {\n  for (var c in a) {\n    Ja(b, c, a[c]);\n  }\n}\n\nfunction Ma(a, b) {\n  for (var c in a) {\n    V(b, c, a[c]);\n  }\n}\n\nfunction Ca(a) {\n  var c, b = M;\n  M = J();\n  (c = L.links.optimistic[a]) && c.forEach(La);\n  (c = L.records.optimistic[a]) && c.forEach(Ma);\n  M = b;\n  ya(L, a);\n}\n\nfunction Na(a) {\n  var b = L.links, c = L.records, d = [], e = new Set;\n  R(a);\n  Ia(d, e, a, b);\n  Ia(d, e, a, c);\n  return d;\n}\n\nfunction W(a, b, c, d, e, f) {\n  return {\n    store: a,\n    variables: b,\n    fragments: c,\n    parentTypeName: d,\n    parentKey: e,\n    parentFieldKey: \"\",\n    fieldName: \"\",\n    partial: !1,\n    optimistic: !!f\n  };\n}\n\nfunction Oa(a, b, c, d) {\n  if (!b) {\n    return !1;\n  }\n  var e = a.typeCondition ? n(a.typeCondition) : null;\n  if (!e || b === e) {\n    return !0;\n  }\n   true && B(\"Heuristic Fragment Matching: A fragment is trying to match against the `\" + b + \"` type, but the type condition is `\" + e + \"`. Since GraphQL allows for interfaces `\" + e + \"` may be aninterface.\\nA schema needs to be defined for this match to be deterministic, otherwise the fragment will be matched heuristically!\", 16);\n  return !w(a).some((function(a) {\n    if (a.kind !== graphql_language_kinds_mjs__WEBPACK_IMPORTED_MODULE_2__[\"Kind\"].FIELD) {\n      return !1;\n    }\n    a = G(n(a), aa(a, d));\n    return !(void 0 !== T(c, a) || void 0 !== U(c, a));\n  }));\n}\n\nfunction Pa(a, b, c, d) {\n  var e, f = 0;\n  return function() {\n    var g, h, l, k;\n    if (void 0 !== e) {\n      if (void 0 !== (g = e())) {\n        return g;\n      }\n      e = void 0;\n       true && x.pop();\n    }\n    for (;f < c.length; ) {\n      if (ea(g = c[f++], d.variables)) {\n        if (g.kind === graphql_language_kinds_mjs__WEBPACK_IMPORTED_MODULE_2__[\"Kind\"].FIELD) {\n          return g;\n        }\n        if (void 0 !== (g = g.kind === graphql_language_kinds_mjs__WEBPACK_IMPORTED_MODULE_2__[\"Kind\"].INLINE_FRAGMENT ? g : d.fragments[n(g)])) {\n          if (d.store.schema) {\n            h = d.store.schema;\n            if (l = a) {\n              (k = g.typeCondition ? n(g.typeCondition) : null) && l !== k ? h.types[k] && \"OBJECT\" === h.types[k].kind ? h = k === l : (A(h.types[k] && (\"INTERFACE\" === h.types[k].kind || \"UNION\" === h.types[k].kind),  true ? \"Invalid Abstract type: The type `\" + k + \"` is not an Interface or Union type in the defined schema, but a fragment in the GraphQL document is using it as a type condition.\" : undefined, 5), \n              qa(h, l), h = h.isSubType(k, l)) : h = !0;\n            } else {\n              h = !1;\n            }\n          } else {\n            h = Oa(g, a, b, d.variables);\n          }\n          if (h) {\n            return  true && z(a, g), (e = Pa(a, b, w(g), d))();\n          }\n        }\n      }\n    }\n  };\n}\n\nfunction Qa(a) {\n  return void 0 === a ? null : a;\n}\n\nfunction Ra(a, b, c, d) {\n  P(\"write\", a.data, d || null);\n  a = Sa(a, b, c);\n  Q();\n  return a;\n}\n\nfunction Sa(a, b, c) {\n  var d = C(b.query), e = {\n    data: c,\n    dependencies: Ba()\n  }, f = a.rootFields[d.operation];\n  a = W(a, ba(d, b.variables), D(b.query), f, f);\n   true && z(f, d);\n  Ta(a, f, w(d), c);\n   true && x.pop();\n  return e;\n}\n\nfunction Ta(a, b, c, d) {\n  var h, l, k, p, m, q, u, v, H, e = b === a.store.rootFields.query, f = !e && !!a.store.rootNames[b], g = f || e ? b : d.__typename;\n  if (g) {\n    f || e || !b || V(b, \"__typename\", g);\n    c = Pa(g, b || g, c, a);\n    for (;h = c(); ) {\n      k = G(e = n(h), l = aa(h, a.variables)), m = d[p = h.alias ? h.alias.value : n(h)];\n      if (true) {\n        if (f || void 0 !== m) {\n          if (a.store.schema && g && \"__typename\" !== e) {\n            q = a.store.schema, u = g;\n            ia.test(v = e) || oa(q, u, v);\n          }\n        } else {\n          e = a.optimistic ? \"\\nYour optimistic result may be missing a field!\" : \"\";\n          l = void 0 === h.selectionSet ? \"scalar (number, boolean, etc)\" : \"selection set\";\n           true && B(\"Invalid undefined: The field at `\" + k + \"` is `undefined`, but the GraphQL query expects a \" + l + \" for this field.\" + e, 13);\n          continue;\n        }\n      }\n      if (\"__typename\" !== e) {\n        if (a.optimistic && f) {\n          if (!(m = a.store.optimisticMutations[e])) {\n            continue;\n          }\n          u = g;\n          v = k;\n          H = e;\n          (q = a).parentTypeName = g;\n          q.parentKey = u;\n          q.parentFieldKey = v;\n          q.fieldName = H;\n          m = d[p] = Qa(m(l || {}, a.store, a));\n        }\n        h.selectionSet ? b && !f ? (p = b + \".\" + k, Ja(b || g, k, h = Ua(a, w(h), Qa(m), p))) : Ua(a, w(h), Qa(m)) : b && !f && V(b || g, k, m);\n        f && (p = g, k = g + \".\" + k, q = e, (h = a).parentTypeName = g, h.parentKey = p, \n        h.parentFieldKey = k, h.fieldName = q, k = a.store.updates[g][e]) && (d[e] = m, \n        k(d, l || {}, a.store, a));\n      }\n    }\n  } else {\n     true && B(\"Couldn't find __typename when writing.\\nIf you're writing to the cache manually have to pass a `__typename` property on each entity in your data.\", 14);\n  }\n}\n\nfunction Ua(a, b, c, d) {\n  var e, f, g, h;\n  if (Array.isArray(c)) {\n    for (e = Array(c.length), f = 0, g = c.length; f < g; f++) {\n      h = Ua(a, b, c[f], d ? d + \".\" + f : void 0);\n      e[f] = h;\n    }\n    return e;\n  }\n  if (null === c) {\n    return null;\n  }\n  e = a.store.keyOfEntity(c);\n  f = c.__typename;\n   true && d && void 0 === a.store.keys[c.__typename] && null === e && \"string\" == typeof f && !Va.test(f) && B(\"Invalid key: The GraphQL query at the field at `\" + d + \"` has a selection set, but no key could be generated for the data at this field.\\nYou have to request `id` or `_id` fields for all selection sets or create a custom `keys` config for `\" + f + \"`.\\nEntities without keys will be embedded directly on the parent entity. If this is intentional, create a `keys` config for `\" + f + \"` that always returns null.\", 15);\n  Ta(a, d = e || d, b, c);\n  return d || null;\n}\n\nfunction X(a) {\n  var b, c, d, e, f, g, h, l, k, p, m, q, u;\n  this.keyOfField = G;\n  a || (a = {});\n  this.resolvers = a.resolvers || {};\n  this.optimisticMutations = a.optimistic || {};\n  this.keys = a.keys || {};\n  d = \"Query\", e = \"Mutation\", f = \"Subscription\";\n  if (a.schema) {\n    g = this.schema = function ha(a) {\n      function b(a) {\n        switch (a.kind) {\n         case \"OBJECT\":\n         case \"INTERFACE\":\n          return {\n            name: a.name,\n            kind: a.kind,\n            interfaces: e(a.interfaces || []),\n            fields: e(a.fields.map(c))\n          };\n\n         case \"UNION\":\n          return {\n            name: a.name,\n            kind: a.kind,\n            types: e(a.possibleTypes || [])\n          };\n        }\n      }\n      function c(a) {\n        return {\n          name: a.name,\n          type: a.type,\n          args: e(a.args)\n        };\n      }\n      var d, e, f, g, h;\n      a = a.__schema;\n      for (d = {}, e = fa, f = 0; f < a.types.length; f++) {\n        if ((g = a.types[f]) && g.name) {\n          (h = b(g)) && (d[g.name] = h);\n        }\n      }\n      return {\n        query: a.queryType ? a.queryType.name : null,\n        mutation: a.mutationType ? a.mutationType.name : null,\n        subscription: a.subscriptionType ? a.subscriptionType.name : null,\n        types: d,\n        isSubType: function(a, b) {\n          var c = d[a], e = d[b];\n          return c && e ? \"UNION\" === c.kind ? !!c.types[b] : \"OBJECT\" !== c.kind && \"OBJECT\" === e.kind ? !!e.interfaces[a] : a === b : !1;\n        }\n      };\n    }(a.schema);\n    d = g.query || d;\n    e = g.mutation || e;\n    f = g.subscription || f;\n  }\n  this.updates = ((b = {})[e] = a.updates && a.updates.Mutation || {}, b[f] = a.updates && a.updates.Subscription || {}, \n  b);\n  this.rootFields = {\n    query: d,\n    mutation: e,\n    subscription: f\n  };\n  this.rootNames = ((c = {})[d] = \"query\", c[e] = \"mutation\", c[f] = \"subscription\", \n  c);\n  a = d;\n  this.data = {\n    defer: !1,\n    gc: new Set,\n    persist: new Set,\n    queryRootKey: a,\n    refCount: J(),\n    refLock: J(),\n    links: {\n      optimistic: J(),\n      base: new Map\n    },\n    records: {\n      optimistic: J(),\n      base: new Map\n    },\n    commutativeKeys: new Set,\n    optimisticOrder: [],\n    storage: null\n  };\n  if (this.schema && \"production\" !== \"development\") {\n    a = this.schema;\n    b = this.keys;\n    if (true) {\n      for (h in b) {\n         true && (a.types[h] || B(\"Invalid Object type: The type `\" + h + \"` is not an object in the defined schema, but the `keys` option is referencing it.\", 20));\n      }\n    }\n    h = this.schema;\n    a = this.updates;\n    if (true) {\n      if (h.mutation) {\n        b = h.types[h.mutation].fields;\n        c = a[h.mutation] || {};\n        for (l in c) {\n           true && void 0 === b[l] && B(\"Invalid mutation field: `\" + l + \"` is not in the defined schema, but the `updates.Mutation` option is referencing it.\", 21);\n        }\n      }\n      if (h.subscription) {\n        l = h.types[h.subscription].fields;\n        h = a[h.subscription] || {};\n        for (k in h) {\n           true && void 0 === l[k] && B(\"Invalid subscription field: `\" + k + \"` is not in the defined schema, but the `updates.Subscription` option is referencing it.\", 22);\n        }\n      }\n    }\n    k = this.schema;\n    l = this.resolvers;\n    if (true) {\n      for (p in l) {\n        if (\"Query\" === p) {\n          if (k.query) {\n            h = k.types[k.query].fields;\n            for (m in l.Query) {\n              h[m] || ra(\"Query.\" + m);\n            }\n          } else {\n            ra(\"Query\");\n          }\n        } else if (k.types[p]) {\n          h = k.types[p].fields;\n          for (q in l[p]) {\n            h[q] || ra(p + \".\" + q);\n          }\n        } else {\n          ra(p);\n        }\n      }\n    }\n    m = this.schema;\n    p = this.optimisticMutations;\n    if ( true && m.mutation) {\n      m = m.types[m.mutation].fields;\n      for (u in p) {\n         true && (m[u] || B(\"Invalid optimistic mutation field: `\" + u + \"` is not a mutation field in the defined schema, but the `optimistic` option is referencing it.\", 24));\n      }\n    }\n  }\n}\n\nfunction Xa(a, b, c) {\n  P(\"read\", a.data, null);\n  a = Wa(a, b, c);\n  Q();\n  return a;\n}\n\nfunction Wa(a, b, c) {\n  var d = C(b.query), e = a.rootFields[d.operation], f = w(d);\n  a = W(a, ba(d, b.variables), D(b.query), e, e);\n   true && z(e, d);\n  c = c || {};\n  c = e !== a.store.rootFields.query ? Ya(a, e, f, c) : Y(a, e, f, c);\n   true && x.pop();\n  return {\n    dependencies: Ba(),\n    partial: void 0 === c ? !1 : a.partial,\n    data: void 0 === c ? null : c\n  };\n}\n\nfunction Ya(a, b, c, d) {\n  var e, f, g;\n  if (\"string\" != typeof d.__typename) {\n    return d;\n  }\n  b = Pa(b, b, c, a);\n  (c = {}).__typename = d.__typename;\n  for (;void 0 !== (e = b()); ) {\n    g = d[f = e.alias ? e.alias.value : n(e)];\n    void 0 !== e.selectionSet && null !== g ? (g = Qa(g), c[f] = Za(a, w(e), g)) : c[f] = g;\n  }\n  return c;\n}\n\nfunction Za(a, b, c) {\n  if (Array.isArray(c)) {\n    for (var d = Array(c.length), e = 0, f = c.length; e < f; e++) {\n      d[e] = Za(a, b, c[e]);\n    }\n    return d;\n  }\n  if (null === c) {\n    return null;\n  }\n  return null !== (d = a.store.keyOfEntity(c)) ? void 0 === (a = Y(a, d, b, {})) ? null : a : Ya(a, c.__typename, b, c);\n}\n\nfunction Y(a, b, c, d, e) {\n  var l, k, p, m, q, u, v, H, t, E, F, r, y, I, f = a.store, g = b === f.rootFields.query, h = e && f.keyOfEntity(e) || b;\n   true && !g && a.store.rootNames[h] && B(\"Invalid root traversal: A selection was being read on `\" + h + \"` which is an uncached root type.\\nThe `\" + a.store.rootFields.mutation + \"` and `\" + a.store.rootFields.subscription + \"` types are special Operation Root Types and cannot be read back from the cache.\", 25);\n  if (\"string\" == typeof (b = g ? b : T(h, \"__typename\") || e && e.__typename)) {\n    if (e && b !== e.__typename) {\n       true && B(\"Invalid resolver data: The resolver at `\" + h + \"` returned an invalid typename that could not be reconciled with the cache.\", 8);\n    } else {\n      c = Pa(b, h, c, a);\n      for (k = !1, p = !1; void 0 !== (l = c()); ) {\n        m = n(l), q = aa(l, a.variables), u = l.alias ? l.alias.value : n(l), H = h + \".\" + (v = G(m, q)), \n        t = T(h, v), E = e ? e[m] : void 0, F = f.resolvers[b];\n        if ( true && f.schema && b) {\n          r = f.schema, y = b;\n          ia.test(I = m) || oa(r, y, I);\n        }\n        r = void 0;\n        if (\"__typename\" === m) {\n          d[u] = b;\n        } else {\n          if (void 0 !== E && void 0 === l.selectionSet) {\n            r = E;\n          } else if (A(null !== K,  true ? \"Invalid Cache call: The cache may only be accessed or mutated duringoperations like write or query, or as part of its resolvers, updaters, or optimistic configs.\" : undefined, 2), \n          \"read\" === K && F && \"function\" == typeof F[m]) {\n            if (E = h, r = H, y = m, (v = a).parentTypeName = b, v.parentKey = E, v.parentFieldKey = r, \n            v.fieldName = y, void 0 !== t && (d[u] = t), r = F[m](d, q || {}, f, a), void 0 !== l.selectionSet && (r = $a(a, b, m, H, w(l), d[u] || {}, r)), \n            f.schema && null === r && !na(f.schema, b, m)) {\n              return;\n            }\n          } else {\n            void 0 === l.selectionSet ? r = t : void 0 !== E ? r = $a(a, b, m, H, w(l), d[u], E) : void 0 !== (q = U(h, v)) ? r = ab(a, q, b, m, w(l), d[u]) : \"object\" == typeof t && null !== t && (r = t);\n          }\n          if (void 0 === r && f.schema && na(f.schema, b, m)) {\n            p = !0, d[u] = null;\n          } else {\n            if (void 0 === r) {\n              return;\n            }\n            k = !0;\n            d[u] = r;\n          }\n        }\n      }\n      p && (a.partial = !0);\n      return g && p && !k ? void 0 : d;\n    }\n  }\n}\n\nfunction $a(a, b, c, d, e, f, g) {\n  var h, l, k, p, m;\n  if (Array.isArray(g)) {\n    h = !(h = a.store).schema || pa(h.schema, b, c);\n    for (l = Array(g.length), k = 0, p = g.length; k < p; k++) {\n      if (void 0 !== (m = $a(a, b, c, d + \".\" + k, e, null != f ? f[k] : void 0, g[k])) || h) {\n        l[k] = void 0 !== m ? m : null;\n      } else {\n        return;\n      }\n    }\n    return l;\n  }\n  if (null == g) {\n    return g;\n  }\n  if (null === f) {\n    return null;\n  }\n  if (\"string\" == typeof g || \"object\" == typeof g && \"string\" == typeof g.__typename) {\n    return b = f || {}, \"string\" == typeof g ? Y(a, g, e, b) : Y(a, d, e, b, g);\n  }\n   true && B(\"Invalid resolver value: The field at `\" + d + \"` is a scalar (number, boolean, etc), but the GraphQL query expects a selection set for this field.\", 9);\n}\n\nfunction ab(a, b, c, d, e, f) {\n  var g, h, l, k, p;\n  if (Array.isArray(b)) {\n    g = (g = a.store).schema && pa(g.schema, c, d);\n    for (h = Array(b.length), l = 0, k = b.length; l < k; l++) {\n      if (void 0 !== (p = ab(a, b[l], c, d, e, null != f ? f[l] : void 0)) || g) {\n        h[l] = void 0 !== p ? p : null;\n      } else {\n        return;\n      }\n    }\n    return h;\n  }\n  return null === b || null === f ? null : Y(a, b, e, f || {});\n}\n\nfunction bb(a, b) {\n  return Object(_urql_core__WEBPACK_IMPORTED_MODULE_1__[\"makeOperation\"])(a.kind, a, Object(_5301ccd2_mjs__WEBPACK_IMPORTED_MODULE_5__[\"_\"])({}, a.context, {\n    meta: Object(_5301ccd2_mjs__WEBPACK_IMPORTED_MODULE_5__[\"_\"])({}, a.context.meta, {\n      cacheOutcome: b\n    })\n  }));\n}\n\nfunction cb(a, b) {\n  return Object(_urql_core__WEBPACK_IMPORTED_MODULE_1__[\"makeOperation\"])(a.kind, a, Object(_5301ccd2_mjs__WEBPACK_IMPORTED_MODULE_5__[\"_\"])({}, a.context, {\n    requestPolicy: b\n  }));\n}\n\nfunction db(a) {\n  return Object(wonka__WEBPACK_IMPORTED_MODULE_0__[\"fromArray\"])(a[0]);\n}\n\nfunction eb(a, b) {\n  return a.push(b), a;\n}\n\nfunction fb(a) {\n  return \"query\" === a.kind && \"network-only\" !== a.context.requestPolicy;\n}\n\nfunction gb(a) {\n  return \"query\" !== a.kind || \"network-only\" === a.context.requestPolicy;\n}\n\nfunction hb(a) {\n  return \"miss\" !== a.outcome || \"cache-only\" === a.operation.context.requestPolicy;\n}\n\nfunction ib(a) {\n  return function(b) {\n    function c(a, b) {\n      var wa, c = a.operation, d = a.error, f = a.extensions, g = c.key;\n      if (\"mutation\" === c.kind) {\n        h(b, S.get(g));\n        S.delete(g);\n      } else {\n        va(y.data, c.key);\n      }\n      if (a.data) {\n        if (h(b, g = Ra(y, c, a.data, g).dependencies), g = Xa(y, c, a.data), a.data = g.data, \n        \"query\" === c.kind) {\n          h(b, wa = g.dependencies);\n        }\n      } else {\n        P(\"read\", y.data, c.key, void 0), Q();\n      }\n      wa && e(a.operation, wa);\n      return {\n        data: a.data,\n        error: d,\n        extensions: f,\n        operation: c\n      };\n    }\n    function d(a) {\n      var b = Xa(y, a), c = b.data ? b.partial ? \"partial\" : \"hit\" : \"miss\";\n      e(a, b.dependencies);\n      return {\n        outcome: c,\n        operation: a,\n        data: b.data,\n        dependencies: b.dependencies\n      };\n    }\n    function e(a, b) {\n      for (var c in b) {\n        (ja[c] || (ja[c] = [])).push(a.key), ka.set(a.key, a);\n      }\n    }\n    function f(a) {\n      var b, c, d, e, f, k, l, Z, m, I;\n      if (\"query\" === a.kind) {\n        va(y.data, a.key);\n      } else if (\"teardown\" === a.kind) {\n        ka.delete(a.key), P(\"read\", y.data, a.key, void 0), Q();\n      } else if (\"mutation\" === a.kind && \"network-only\" !== a.context.requestPolicy) {\n        P(\"write\", (b = y).data, a.key, !0);\n        c = C(a.query), d = Ba();\n        A((e = b.rootFields[c.operation]) === b.rootFields.mutation,  true ? \"writeOptimistic(...) was called with an operation that is not a mutation.\\nThis case is unsupported and should never occur.\" : undefined, 10);\n         true && z(e, c);\n        Ta(b = W(b, ba(c, a.variables), D(a.query), e, e, !0), e, w(c), {});\n         true && x.pop();\n        Q();\n        a: {\n          for (f in d) {\n            c = !1;\n            break a;\n          }\n          c = !0;\n        }\n        if (!c) {\n          for (k in d) {\n            la[k] = !0;\n          }\n          S.set(a.key, d);\n          h(k = new Set, d);\n          g(a, k);\n        }\n      }\n      d = _urql_core__WEBPACK_IMPORTED_MODULE_1__[\"makeOperation\"];\n      k = a.kind;\n      c = a.key;\n      e = Object(_urql_core__WEBPACK_IMPORTED_MODULE_1__[\"formatDocument\"])(a.query);\n      if (a.variables) {\n        if (f = C(a.query), (b = a.variables) && f.variableDefinitions) {\n          for (l = {}, Z = 0, m = f.variableDefinitions.length; Z < m; Z++) {\n            l[I = n(f.variableDefinitions[Z].variable)] = b[I];\n          }\n          f = l;\n        } else {\n          f = void 0;\n        }\n      } else {\n        f = a.variables;\n      }\n      return d(k, {\n        key: c,\n        query: e,\n        variables: f\n      }, a.context);\n    }\n    function g(a, b) {\n      b.forEach((function(b) {\n        var c, d;\n        if (b !== a.key) {\n          if (c = ka.get(b)) {\n            ka.delete(b);\n            d = \"cache-first\";\n            xa.has(b) && (xa.delete(b), d = \"cache-and-network\");\n            F.reexecuteOperation(cb(c, d));\n          }\n        }\n      }));\n    }\n    function h(a, b) {\n      var c, d, e;\n      if (b) {\n        for (c in b) {\n          if (b = ja[c]) {\n            ja[c] = [];\n            for (d = 0, e = b.length; d < e; d++) {\n              a.add(b[d]);\n            }\n          }\n        }\n      }\n    }\n    function l(a) {\n      for (var b in a) {\n        if (la[b]) {\n          return !0;\n        }\n      }\n      return !1;\n    }\n    function p(a) {\n       true && r({\n        type: \"cacheMiss\",\n        message: \"The result could not be retrieved from the cache\",\n        operation: a.operation,\n        source: \"cacheExchange\"\n      });\n      return bb(a.operation, \"miss\");\n    }\n    function m(a) {\n      return \"miss\" === a.outcome && \"cache-only\" !== a.operation.context.requestPolicy && !l(a.dependencies);\n    }\n    function q(a) {\n      var b = a.operation, c = a.outcome, d = a.dependencies, e = {\n        operation: bb(b, c),\n        data: a.data,\n        error: a.error,\n        extensions: a.extensions\n      };\n      if (\"cache-and-network\" === b.context.requestPolicy || \"cache-first\" === b.context.requestPolicy && \"partial\" === c) {\n        e.stale = !0, l(d) ? \"cache-and-network\" === b.context.requestPolicy && xa.add(b.key) : F.reexecuteOperation(cb(b, \"network-only\"));\n      }\n       true && r({\n        type: \"cacheHit\",\n        message: \"A requested operation was found and returned from the cache.\",\n        operation: a.operation,\n        data: {\n          value: e\n        },\n        source: \"cacheExchange\"\n      });\n      return e;\n    }\n    function u(a) {\n      var b = new Set, d = c(a, b);\n      g(a.operation, b);\n      return d;\n    }\n    function v(a) {\n      return !S.has(a.operation.key);\n    }\n    function H(a) {\n      var b, d, e;\n      if (ma.push(a) < S.size) {\n        return wonka__WEBPACK_IMPORTED_MODULE_0__[\"empty\"];\n      }\n      for (b = 0; b < ma.length; b++) {\n        va(y.data, ma[b].operation.key);\n      }\n      for (d in la) {\n        delete la[d];\n      }\n      b = [];\n      d = new Set;\n      for (;e = ma.shift(); ) {\n        b.push(c(e, d));\n      }\n      g(a.operation, d);\n      return Object(wonka__WEBPACK_IMPORTED_MODULE_0__[\"fromArray\"])(b);\n    }\n    function t(a) {\n      return S.has(a.operation.key);\n    }\n    var I, S, ma, ka, la, xa, ja, E = b.forward, F = b.client, r = b.dispatchDebug, y = new X(a);\n    a && a.storage && (I = a.storage.readData().then((function k(b) {\n      var e, f, g, h, c = y.data, d = a.storage;\n      P(\"write\", c, null);\n      for (e in b) {\n        if (void 0 !== (f = b[e])) {\n          h = (g = ua(e)).entityKey;\n          g = g.fieldKey;\n          \":\" === f[0] ? Ja(h, g, JSON.parse(f.slice(1))) : V(h, g, JSON.parse(f));\n        }\n      }\n      Q();\n      c.storage = d;\n    })));\n    S = new Map, ma = [], ka = new Map, la = J(), xa = new Set, ja = J();\n    return function(a) {\n      var b, c;\n      a = Object(wonka__WEBPACK_IMPORTED_MODULE_0__[\"share\"])(a);\n      b = I ? Object(wonka__WEBPACK_IMPORTED_MODULE_0__[\"mergeMap\"])(db)(Object(wonka__WEBPACK_IMPORTED_MODULE_0__[\"take\"])(1)(Object(wonka__WEBPACK_IMPORTED_MODULE_0__[\"combine\"])(Object(wonka__WEBPACK_IMPORTED_MODULE_0__[\"scan\"])(eb, [])(a), Object(wonka__WEBPACK_IMPORTED_MODULE_0__[\"fromPromise\"])(I)))) : wonka__WEBPACK_IMPORTED_MODULE_0__[\"empty\"];\n      b = Object(wonka__WEBPACK_IMPORTED_MODULE_0__[\"share\"])(Object(wonka__WEBPACK_IMPORTED_MODULE_0__[\"concat\"])([ b, a ]));\n      a = Object(wonka__WEBPACK_IMPORTED_MODULE_0__[\"share\"])(Object(wonka__WEBPACK_IMPORTED_MODULE_0__[\"map\"])(d)(Object(wonka__WEBPACK_IMPORTED_MODULE_0__[\"filter\"])(fb)(b)));\n      b = Object(wonka__WEBPACK_IMPORTED_MODULE_0__[\"filter\"])(gb)(b);\n      c = Object(wonka__WEBPACK_IMPORTED_MODULE_0__[\"map\"])(p)(Object(wonka__WEBPACK_IMPORTED_MODULE_0__[\"filter\"])(m)(a));\n      a = Object(wonka__WEBPACK_IMPORTED_MODULE_0__[\"map\"])(q)(Object(wonka__WEBPACK_IMPORTED_MODULE_0__[\"filter\"])(hb)(a));\n      c = Object(wonka__WEBPACK_IMPORTED_MODULE_0__[\"share\"])(E(Object(wonka__WEBPACK_IMPORTED_MODULE_0__[\"map\"])(f)(Object(wonka__WEBPACK_IMPORTED_MODULE_0__[\"merge\"])([ b, c ]))));\n      b = Object(wonka__WEBPACK_IMPORTED_MODULE_0__[\"map\"])(u)(Object(wonka__WEBPACK_IMPORTED_MODULE_0__[\"filter\"])(v)(c));\n      c = Object(wonka__WEBPACK_IMPORTED_MODULE_0__[\"mergeMap\"])(H)(Object(wonka__WEBPACK_IMPORTED_MODULE_0__[\"filter\"])(t)(c));\n      return Object(wonka__WEBPACK_IMPORTED_MODULE_0__[\"merge\"])([ b, c, a ]);\n    };\n  };\n}\n\nfunction jb(a) {\n  return a && a.networkError && !a.response && (\"undefined\" != typeof navigator && !1 === navigator.onLine || /request failed|failed to fetch|network\\s?error/i.test(a.networkError.message));\n}\n\nfunction offlineExchange(a) {\n  return function(b) {\n    function e(a) {\n      var b, c, d, e, f;\n      if (b = \"mutation\" === a.operation.kind && jb(a.error)) {\n        a: {\n          b = H;\n          d = (c = a.operation).variables || J(), e = D(c.query);\n          c = [].concat(w(C(c.query)));\n          for (;f = c.pop(); ) {\n            if (ea(f, d)) {\n              if (f.kind !== graphql_language_kinds_mjs__WEBPACK_IMPORTED_MODULE_2__[\"Kind\"].FIELD) {\n                (f = f.kind === graphql_language_kinds_mjs__WEBPACK_IMPORTED_MODULE_2__[\"Kind\"].INLINE_FRAGMENT ? f : e[n(f)]) && c.push.apply(c, w(f));\n              } else if (b[n(f)]) {\n                b = !0;\n                break a;\n              }\n            }\n          }\n          b = !1;\n        }\n      }\n      return b ? (t.push(a.operation), E(), !1) : !0;\n    }\n    function h(a) {\n      return \"query\" === a.operation.kind && jb(a.error) ? (v(cb(a.operation, \"cache-only\")), \n      t.push(a.operation), !1) : !0;\n    }\n    var p, m, q, u, v, H, t, E, F, r, y, k = a.storage;\n    if (k && k.onOnline && k.readMetadata && k.writeMetadata) {\n      p = b.forward, m = b.client;\n      b = b.dispatchDebug;\n      q = Object(wonka__WEBPACK_IMPORTED_MODULE_0__[\"makeSubject\"])(), u = q.source, v = q.next, H = a.optimistic || {}, t = [], E = function c() {\n        var a, b, c;\n        for (a = [], b = 0; b < t.length; b++) {\n          \"mutation\" === (c = t[b]).kind && a.push({\n            query: Object(graphql_language_printer_mjs__WEBPACK_IMPORTED_MODULE_4__[\"print\"])(c.query),\n            variables: c.variables\n          });\n        }\n        k.writeMetadata(a);\n      }, F = !1;\n      k.onOnline(r = function d() {\n        var a, b;\n        if (!F) {\n          F = !0;\n          for (a = 0; a < t.length; a++) {\n            \"mutation\" === (b = t[a]).kind && v(Object(_urql_core__WEBPACK_IMPORTED_MODULE_1__[\"makeOperation\"])(\"teardown\", b));\n          }\n          for (a = 0; a < t.length; a++) {\n            m.reexecuteOperation(t[a]);\n          }\n          t.length = 0;\n          F = !1;\n          E();\n        }\n      });\n      k.readMetadata().then((function g(a) {\n        if (a) {\n          for (var b = 0; b < a.length; b++) {\n            t.push(m.createRequestOperation(\"mutation\", Object(_urql_core__WEBPACK_IMPORTED_MODULE_1__[\"createRequest\"])(a[b].query, a[b].variables)));\n          }\n          r();\n        }\n      }));\n      y = ib(a)({\n        client: m,\n        dispatchDebug: b,\n        forward: function f(a) {\n          return Object(wonka__WEBPACK_IMPORTED_MODULE_0__[\"filter\"])(e)(p(a));\n        }\n      });\n      return function l(a) {\n        a = Object(wonka__WEBPACK_IMPORTED_MODULE_0__[\"share\"])(a);\n        a = Object(wonka__WEBPACK_IMPORTED_MODULE_0__[\"merge\"])([ u, a ]);\n        return Object(wonka__WEBPACK_IMPORTED_MODULE_0__[\"filter\"])(h)(y(a));\n      };\n    }\n    return ib(a)(b);\n  };\n}\n\nvar ca, x, ia, K, L, M, N, O, Va;\n\n\n\n\n\n\n\n\n\n\n\n\n\nca = new Set, x = [];\n\nia = /^__/;\n\nK = null, L = null, M = null, N = null, O = !1;\n\nVa = /^__|PageInfo|(Connection|Edge)$/;\n\nX.prototype.keyOfEntity = function(a) {\n  var e, b = a.__typename, c = a.id, d = a._id;\n  if (!b) {\n    return null;\n  }\n  if (void 0 !== this.rootNames[b]) {\n    return b;\n  }\n  this.keys[b] ? e = this.keys[b](a) : null != c ? e = \"\" + c : null != d && (e = \"\" + d);\n  return e ? b + \":\" + e : null;\n};\n\nX.prototype.resolveFieldByKey = function(a, b) {\n  if (null === (a = null !== a && \"string\" != typeof a ? this.keyOfEntity(a) : a)) {\n    return null;\n  }\n  var c = T(a, b);\n  return void 0 !== c ? c : (b = U(a, b)) ? b : null;\n};\n\nX.prototype.resolve = function(a, b, c) {\n  return this.resolveFieldByKey(a, G(b, c));\n};\n\nX.prototype.invalidate = function(a, b, c) {\n  var e, d = \"string\" == typeof a ? a : this.keyOfEntity(a);\n  A(d,  true ? \"object\" == \"Can't generate a key for invalidate(...).\\nYou have to pass an id or _id field or create a custom `keys` field for `\" + typeof a ? a.__typename : a + \"`.\" : undefined, 19);\n  a = b ? [ {\n    fieldKey: G(b, c)\n  } ] : Na(d);\n  b = 0;\n  for (c = a.length; b < c; b++) {\n    void 0 !== U(d, e = a[b].fieldKey) ? Ja(d, e, void 0) : V(d, e, void 0);\n  }\n};\n\nX.prototype.inspectFields = function(a) {\n  return null !== (a = null !== a && \"string\" != typeof a ? this.keyOfEntity(a) : a) ? Na(a) : [];\n};\n\nX.prototype.updateQuery = function(a, b) {\n  (a = Object(_urql_core__WEBPACK_IMPORTED_MODULE_1__[\"createRequest\"])(a.query, a.variables)).query = Object(_urql_core__WEBPACK_IMPORTED_MODULE_1__[\"formatDocument\"])(a.query);\n  null !== (b = b(this.readQuery(a))) && Sa(this, a, b);\n};\n\nX.prototype.readQuery = function(a) {\n  (a = Object(_urql_core__WEBPACK_IMPORTED_MODULE_1__[\"createRequest\"])(a.query, a.variables)).query = Object(_urql_core__WEBPACK_IMPORTED_MODULE_1__[\"formatDocument\"])(a.query);\n  return Wa(this, a).data;\n};\n\nX.prototype.readFragment = function(a, b, c) {\n  var d, e;\n  if (void 0 === (d = (a = D(a = Object(_urql_core__WEBPACK_IMPORTED_MODULE_1__[\"formatDocument\"])(a)))[(d = Object.keys(a))[0]])) {\n     true && B(\"readFragment(...) was called with an empty fragment.\\nYou have to call it with at least one fragment in your GraphQL document.\", 6), \n    c = null;\n  } else {\n    e = d.typeCondition.name.value;\n    \"string\" == typeof b || b.__typename || (b.__typename = e);\n    (b = \"string\" != typeof b ? this.keyOfEntity(Object(_5301ccd2_mjs__WEBPACK_IMPORTED_MODULE_5__[\"_\"])({}, {\n      __typename: e\n    }, b)) : b) ? ( true && z(e, d), c = Y(c = W(this, c || {}, a, e, b), b, w(d), {}) || null, \n     true && x.pop()) : ( true && B(\"Can't generate a key for readFragment(...).\\nYou have to pass an `id` or `_id` field or create a custom `keys` config for `\" + e + \"`.\", 7), \n    c = null);\n  }\n  return c;\n};\n\nX.prototype.writeFragment = function(a, b, c) {\n  var d, e, f;\n  if (void 0 === (d = (a = D(a = Object(_urql_core__WEBPACK_IMPORTED_MODULE_1__[\"formatDocument\"])(a)))[(d = Object.keys(a))[0]])) {\n     true && B(\"writeFragment(...) was called with an empty fragment.\\nYou have to call it with at least one fragment in your GraphQL document.\", 11);\n  } else {\n    b = Object(_5301ccd2_mjs__WEBPACK_IMPORTED_MODULE_5__[\"_\"])({}, {\n      __typename: e = d.typeCondition.name.value\n    }, b);\n    (f = this.keyOfEntity(b)) ? ( true && z(e, d), Ta(c = W(this, c || {}, a, e, f), f, w(d), b), \n     true && x.pop()) :  true && B(\"Can't generate a key for writeFragment(...) data.\\nYou have to pass an `id` or `_id` field or create a custom `keys` config for `\" + e + \"`.\", 12);\n  }\n};\n\n\n//# sourceMappingURL=urql-exchange-graphcache.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@urql/exchange-graphcache/dist/urql-exchange-graphcache.mjs\n");

/***/ }),

/***/ "./node_modules/graphql/jsutils/keyValMap.mjs":
/*!****************************************************!*\
  !*** ./node_modules/graphql/jsutils/keyValMap.mjs ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return keyValMap; });\n/**\n * Creates a keyed JS object from an array, given a function to produce the keys\n * and a function to produce the values from each item in the array.\n *\n *     const phoneBook = [\n *       { name: 'Jon', num: '555-1234' },\n *       { name: 'Jenny', num: '867-5309' }\n *     ]\n *\n *     // { Jon: '555-1234', Jenny: '867-5309' }\n *     const phonesByName = keyValMap(\n *       phoneBook,\n *       entry => entry.name,\n *       entry => entry.num\n *     )\n *\n */\nfunction keyValMap(list, keyFn, valFn) {\n  return list.reduce(function (map, item) {\n    map[keyFn(item)] = valFn(item);\n    return map;\n  }, Object.create(null));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2dyYXBocWwvanN1dGlscy9rZXlWYWxNYXAubWpzPzU5NzIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLCtCQUErQjtBQUN6QyxVQUFVO0FBQ1Y7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2dyYXBocWwvanN1dGlscy9rZXlWYWxNYXAubWpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDcmVhdGVzIGEga2V5ZWQgSlMgb2JqZWN0IGZyb20gYW4gYXJyYXksIGdpdmVuIGEgZnVuY3Rpb24gdG8gcHJvZHVjZSB0aGUga2V5c1xuICogYW5kIGEgZnVuY3Rpb24gdG8gcHJvZHVjZSB0aGUgdmFsdWVzIGZyb20gZWFjaCBpdGVtIGluIHRoZSBhcnJheS5cbiAqXG4gKiAgICAgY29uc3QgcGhvbmVCb29rID0gW1xuICogICAgICAgeyBuYW1lOiAnSm9uJywgbnVtOiAnNTU1LTEyMzQnIH0sXG4gKiAgICAgICB7IG5hbWU6ICdKZW5ueScsIG51bTogJzg2Ny01MzA5JyB9XG4gKiAgICAgXVxuICpcbiAqICAgICAvLyB7IEpvbjogJzU1NS0xMjM0JywgSmVubnk6ICc4NjctNTMwOScgfVxuICogICAgIGNvbnN0IHBob25lc0J5TmFtZSA9IGtleVZhbE1hcChcbiAqICAgICAgIHBob25lQm9vayxcbiAqICAgICAgIGVudHJ5ID0+IGVudHJ5Lm5hbWUsXG4gKiAgICAgICBlbnRyeSA9PiBlbnRyeS5udW1cbiAqICAgICApXG4gKlxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBrZXlWYWxNYXAobGlzdCwga2V5Rm4sIHZhbEZuKSB7XG4gIHJldHVybiBsaXN0LnJlZHVjZShmdW5jdGlvbiAobWFwLCBpdGVtKSB7XG4gICAgbWFwW2tleUZuKGl0ZW0pXSA9IHZhbEZuKGl0ZW0pO1xuICAgIHJldHVybiBtYXA7XG4gIH0sIE9iamVjdC5jcmVhdGUobnVsbCkpO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/graphql/jsutils/keyValMap.mjs\n");

/***/ }),

/***/ "./node_modules/graphql/utilities/valueFromASTUntyped.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/graphql/utilities/valueFromASTUntyped.mjs ***!
  \****************************************************************/
/*! exports provided: valueFromASTUntyped */
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"valueFromASTUntyped\", function() { return valueFromASTUntyped; });\n/* harmony import */ var _jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../jsutils/inspect.mjs */ \"./node_modules/graphql/jsutils/inspect.mjs\");\n/* harmony import */ var _jsutils_invariant_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../jsutils/invariant.mjs */ \"./node_modules/graphql/jsutils/invariant.mjs\");\n/* harmony import */ var _jsutils_keyValMap_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../jsutils/keyValMap.mjs */ \"./node_modules/graphql/jsutils/keyValMap.mjs\");\n/* harmony import */ var _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../language/kinds.mjs */ \"./node_modules/graphql/language/kinds.mjs\");\n\n\n\n\n\n/**\n * Produces a JavaScript value given a GraphQL Value AST.\n *\n * Unlike `valueFromAST()`, no type is provided. The resulting JavaScript value\n * will reflect the provided GraphQL value AST.\n *\n * | GraphQL Value        | JavaScript Value |\n * | -------------------- | ---------------- |\n * | Input Object         | Object           |\n * | List                 | Array            |\n * | Boolean              | Boolean          |\n * | String / Enum        | String           |\n * | Int / Float          | Number           |\n * | Null                 | null             |\n *\n */\nfunction valueFromASTUntyped(valueNode, variables) {\n  switch (valueNode.kind) {\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_3__[\"Kind\"].NULL:\n      return null;\n\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_3__[\"Kind\"].INT:\n      return parseInt(valueNode.value, 10);\n\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_3__[\"Kind\"].FLOAT:\n      return parseFloat(valueNode.value);\n\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_3__[\"Kind\"].STRING:\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_3__[\"Kind\"].ENUM:\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_3__[\"Kind\"].BOOLEAN:\n      return valueNode.value;\n\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_3__[\"Kind\"].LIST:\n      return valueNode.values.map(function (node) {\n        return valueFromASTUntyped(node, variables);\n      });\n\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_3__[\"Kind\"].OBJECT:\n      return Object(_jsutils_keyValMap_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(valueNode.fields, function (field) {\n        return field.name.value;\n      }, function (field) {\n        return valueFromASTUntyped(field.value, variables);\n      });\n\n    case _language_kinds_mjs__WEBPACK_IMPORTED_MODULE_3__[\"Kind\"].VARIABLE:\n      return variables === null || variables === void 0 ? void 0 : variables[valueNode.name.value];\n  } // istanbul ignore next (Not reachable. All possible value nodes have been considered)\n\n\n   false || Object(_jsutils_invariant_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(0, 'Unexpected value node: ' + Object(_jsutils_inspect_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(valueNode));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2dyYXBocWwvdXRpbGl0aWVzL3ZhbHVlRnJvbUFTVFVudHlwZWQubWpzPzAwMzEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQTZDO0FBQ0k7QUFDQTtBQUNKOztBQUU3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxTQUFTLHdEQUFJO0FBQ2I7O0FBRUEsU0FBUyx3REFBSTtBQUNiOztBQUVBLFNBQVMsd0RBQUk7QUFDYjs7QUFFQSxTQUFTLHdEQUFJO0FBQ2IsU0FBUyx3REFBSTtBQUNiLFNBQVMsd0RBQUk7QUFDYjs7QUFFQSxTQUFTLHdEQUFJO0FBQ2I7QUFDQTtBQUNBLE9BQU87O0FBRVAsU0FBUyx3REFBSTtBQUNiLGFBQWEsc0VBQVM7QUFDdEI7QUFDQSxPQUFPO0FBQ1A7QUFDQSxPQUFPOztBQUVQLFNBQVMsd0RBQUk7QUFDYjtBQUNBLEdBQUc7OztBQUdILEVBQUUsTUFBSyxJQUFJLHNFQUFTLGdDQUFnQyxvRUFBTztBQUMzRCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9ncmFwaHFsL3V0aWxpdGllcy92YWx1ZUZyb21BU1RVbnR5cGVkLm1qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBpbnNwZWN0IGZyb20gXCIuLi9qc3V0aWxzL2luc3BlY3QubWpzXCI7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gXCIuLi9qc3V0aWxzL2ludmFyaWFudC5tanNcIjtcbmltcG9ydCBrZXlWYWxNYXAgZnJvbSBcIi4uL2pzdXRpbHMva2V5VmFsTWFwLm1qc1wiO1xuaW1wb3J0IHsgS2luZCB9IGZyb20gXCIuLi9sYW5ndWFnZS9raW5kcy5tanNcIjtcblxuLyoqXG4gKiBQcm9kdWNlcyBhIEphdmFTY3JpcHQgdmFsdWUgZ2l2ZW4gYSBHcmFwaFFMIFZhbHVlIEFTVC5cbiAqXG4gKiBVbmxpa2UgYHZhbHVlRnJvbUFTVCgpYCwgbm8gdHlwZSBpcyBwcm92aWRlZC4gVGhlIHJlc3VsdGluZyBKYXZhU2NyaXB0IHZhbHVlXG4gKiB3aWxsIHJlZmxlY3QgdGhlIHByb3ZpZGVkIEdyYXBoUUwgdmFsdWUgQVNULlxuICpcbiAqIHwgR3JhcGhRTCBWYWx1ZSAgICAgICAgfCBKYXZhU2NyaXB0IFZhbHVlIHxcbiAqIHwgLS0tLS0tLS0tLS0tLS0tLS0tLS0gfCAtLS0tLS0tLS0tLS0tLS0tIHxcbiAqIHwgSW5wdXQgT2JqZWN0ICAgICAgICAgfCBPYmplY3QgICAgICAgICAgIHxcbiAqIHwgTGlzdCAgICAgICAgICAgICAgICAgfCBBcnJheSAgICAgICAgICAgIHxcbiAqIHwgQm9vbGVhbiAgICAgICAgICAgICAgfCBCb29sZWFuICAgICAgICAgIHxcbiAqIHwgU3RyaW5nIC8gRW51bSAgICAgICAgfCBTdHJpbmcgICAgICAgICAgIHxcbiAqIHwgSW50IC8gRmxvYXQgICAgICAgICAgfCBOdW1iZXIgICAgICAgICAgIHxcbiAqIHwgTnVsbCAgICAgICAgICAgICAgICAgfCBudWxsICAgICAgICAgICAgIHxcbiAqXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB2YWx1ZUZyb21BU1RVbnR5cGVkKHZhbHVlTm9kZSwgdmFyaWFibGVzKSB7XG4gIHN3aXRjaCAodmFsdWVOb2RlLmtpbmQpIHtcbiAgICBjYXNlIEtpbmQuTlVMTDpcbiAgICAgIHJldHVybiBudWxsO1xuXG4gICAgY2FzZSBLaW5kLklOVDpcbiAgICAgIHJldHVybiBwYXJzZUludCh2YWx1ZU5vZGUudmFsdWUsIDEwKTtcblxuICAgIGNhc2UgS2luZC5GTE9BVDpcbiAgICAgIHJldHVybiBwYXJzZUZsb2F0KHZhbHVlTm9kZS52YWx1ZSk7XG5cbiAgICBjYXNlIEtpbmQuU1RSSU5HOlxuICAgIGNhc2UgS2luZC5FTlVNOlxuICAgIGNhc2UgS2luZC5CT09MRUFOOlxuICAgICAgcmV0dXJuIHZhbHVlTm9kZS52YWx1ZTtcblxuICAgIGNhc2UgS2luZC5MSVNUOlxuICAgICAgcmV0dXJuIHZhbHVlTm9kZS52YWx1ZXMubWFwKGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZUZyb21BU1RVbnR5cGVkKG5vZGUsIHZhcmlhYmxlcyk7XG4gICAgICB9KTtcblxuICAgIGNhc2UgS2luZC5PQkpFQ1Q6XG4gICAgICByZXR1cm4ga2V5VmFsTWFwKHZhbHVlTm9kZS5maWVsZHMsIGZ1bmN0aW9uIChmaWVsZCkge1xuICAgICAgICByZXR1cm4gZmllbGQubmFtZS52YWx1ZTtcbiAgICAgIH0sIGZ1bmN0aW9uIChmaWVsZCkge1xuICAgICAgICByZXR1cm4gdmFsdWVGcm9tQVNUVW50eXBlZChmaWVsZC52YWx1ZSwgdmFyaWFibGVzKTtcbiAgICAgIH0pO1xuXG4gICAgY2FzZSBLaW5kLlZBUklBQkxFOlxuICAgICAgcmV0dXJuIHZhcmlhYmxlcyA9PT0gbnVsbCB8fCB2YXJpYWJsZXMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHZhcmlhYmxlc1t2YWx1ZU5vZGUubmFtZS52YWx1ZV07XG4gIH0gLy8gaXN0YW5idWwgaWdub3JlIG5leHQgKE5vdCByZWFjaGFibGUuIEFsbCBwb3NzaWJsZSB2YWx1ZSBub2RlcyBoYXZlIGJlZW4gY29uc2lkZXJlZClcblxuXG4gIGZhbHNlIHx8IGludmFyaWFudCgwLCAnVW5leHBlY3RlZCB2YWx1ZSBub2RlOiAnICsgaW5zcGVjdCh2YWx1ZU5vZGUpKTtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/graphql/utilities/valueFromASTUntyped.mjs\n");

/***/ }),

/***/ "./src/pages/_app.tsx":
/*!****************************!*\
  !*** ./src/pages/_app.tsx ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var _Users_candicehan_Documents_geekjeeyoung_lireddit_web_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @chakra-ui/react */ \"./node_modules/@chakra-ui/react/dist/esm/index.js\");\n/* harmony import */ var urql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! urql */ \"./node_modules/urql/dist/urql.es.js\");\n/* harmony import */ var _urql_exchange_graphcache__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @urql/exchange-graphcache */ \"./node_modules/@urql/exchange-graphcache/dist/urql-exchange-graphcache.mjs\");\n/* harmony import */ var _theme__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../theme */ \"./src/theme.tsx\");\n\n\nvar _jsxFileName = \"/Users/candicehan/Documents/geekjeeyoung/lireddit/web/src/pages/_app.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { Object(_Users_candicehan_Documents_geekjeeyoung_lireddit_web_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n\n\n\n\nvar client = Object(urql__WEBPACK_IMPORTED_MODULE_3__[\"createClient\"])({\n  url: \"http://localhost:4000/graphql\",\n  fetchOptions: {\n    credentials: \"include\"\n  },\n  exchanges: [urql__WEBPACK_IMPORTED_MODULE_3__[\"dedupExchange\"], Object(_urql_exchange_graphcache__WEBPACK_IMPORTED_MODULE_4__[\"cacheExchange\"])({}), urql__WEBPACK_IMPORTED_MODULE_3__[\"fetchExchange\"]]\n});\n\nfunction MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__[\"jsxDEV\"])(urql__WEBPACK_IMPORTED_MODULE_3__[\"Provider\"], {\n    value: client,\n    children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__[\"jsxDEV\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"ChakraProvider\"], {\n      resetCSS: true,\n      theme: _theme__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n      children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__[\"jsxDEV\"])(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__[\"ColorModeProvider\"], {\n        options: {\n          useSystemColorMode: true\n        },\n        children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__[\"jsxDEV\"])(Component, _objectSpread({}, pageProps), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MyApp;\n/* harmony default export */ __webpack_exports__[\"default\"] = (MyApp);\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL3BhZ2VzL19hcHAudHN4Pzg1NDgiXSwibmFtZXMiOlsiY2xpZW50IiwiY3JlYXRlQ2xpZW50IiwidXJsIiwiZmV0Y2hPcHRpb25zIiwiY3JlZGVudGlhbHMiLCJleGNoYW5nZXMiLCJkZWR1cEV4Y2hhbmdlIiwiY2FjaGVFeGNoYW5nZSIsImZldGNoRXhjaGFuZ2UiLCJNeUFwcCIsIkNvbXBvbmVudCIsInBhZ2VQcm9wcyIsInRoZW1lIiwidXNlU3lzdGVtQ29sb3JNb2RlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFFQTtBQUVBO0FBRUE7QUFFQSxJQUFNQSxNQUFNLEdBQUdDLHlEQUFZLENBQUM7QUFDMUJDLEtBQUcsRUFBRSwrQkFEcUI7QUFFMUJDLGNBQVksRUFBRTtBQUNaQyxlQUFXLEVBQUU7QUFERCxHQUZZO0FBSzFCQyxXQUFTLEVBQUUsQ0FBQ0Msa0RBQUQsRUFBZ0JDLCtFQUFhLENBQUMsRUFBRCxDQUE3QixFQUFtQ0Msa0RBQW5DO0FBTGUsQ0FBRCxDQUEzQjs7QUFRQSxTQUFTQyxLQUFULE9BQThDO0FBQUEsTUFBN0JDLFNBQTZCLFFBQTdCQSxTQUE2QjtBQUFBLE1BQWxCQyxTQUFrQixRQUFsQkEsU0FBa0I7QUFDNUMsc0JBQ0UscUVBQUMsNkNBQUQ7QUFBVSxTQUFLLEVBQUVYLE1BQWpCO0FBQUEsMkJBQ0UscUVBQUMsK0RBQUQ7QUFBZ0IsY0FBUSxNQUF4QjtBQUF5QixXQUFLLEVBQUVZLDhDQUFoQztBQUFBLDZCQUNFLHFFQUFDLGtFQUFEO0FBQ0UsZUFBTyxFQUFFO0FBQ1BDLDRCQUFrQixFQUFFO0FBRGIsU0FEWDtBQUFBLCtCQUtFLHFFQUFDLFNBQUQsb0JBQWVGLFNBQWY7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUxGO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFERjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBREY7QUFBQTtBQUFBO0FBQUE7QUFBQSxVQURGO0FBYUQ7O0tBZFFGLEs7QUFnQk1BLG9FQUFmIiwiZmlsZSI6Ii4vc3JjL3BhZ2VzL19hcHAudHN4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hha3JhUHJvdmlkZXIsIENvbG9yTW9kZVByb3ZpZGVyIH0gZnJvbSBcIkBjaGFrcmEtdWkvcmVhY3RcIjtcblxuaW1wb3J0IHsgUHJvdmlkZXIsIGNyZWF0ZUNsaWVudCwgZGVkdXBFeGNoYW5nZSwgZmV0Y2hFeGNoYW5nZSB9IGZyb20gXCJ1cnFsXCI7XG5cbmltcG9ydCB7IGNhY2hlRXhjaGFuZ2UgfSBmcm9tIFwiQHVycWwvZXhjaGFuZ2UtZ3JhcGhjYWNoZVwiO1xuXG5pbXBvcnQgdGhlbWUgZnJvbSBcIi4uL3RoZW1lXCI7XG5cbmNvbnN0IGNsaWVudCA9IGNyZWF0ZUNsaWVudCh7XG4gIHVybDogXCJodHRwOi8vbG9jYWxob3N0OjQwMDAvZ3JhcGhxbFwiLFxuICBmZXRjaE9wdGlvbnM6IHtcbiAgICBjcmVkZW50aWFsczogXCJpbmNsdWRlXCIsXG4gIH0sXG4gIGV4Y2hhbmdlczogW2RlZHVwRXhjaGFuZ2UsIGNhY2hlRXhjaGFuZ2Uoe30pLCBmZXRjaEV4Y2hhbmdlXSxcbn0pO1xuXG5mdW5jdGlvbiBNeUFwcCh7IENvbXBvbmVudCwgcGFnZVByb3BzIH06IGFueSkge1xuICByZXR1cm4gKFxuICAgIDxQcm92aWRlciB2YWx1ZT17Y2xpZW50fT5cbiAgICAgIDxDaGFrcmFQcm92aWRlciByZXNldENTUyB0aGVtZT17dGhlbWV9PlxuICAgICAgICA8Q29sb3JNb2RlUHJvdmlkZXJcbiAgICAgICAgICBvcHRpb25zPXt7XG4gICAgICAgICAgICB1c2VTeXN0ZW1Db2xvck1vZGU6IHRydWUsXG4gICAgICAgICAgfX1cbiAgICAgICAgPlxuICAgICAgICAgIDxDb21wb25lbnQgey4uLnBhZ2VQcm9wc30gLz5cbiAgICAgICAgPC9Db2xvck1vZGVQcm92aWRlcj5cbiAgICAgIDwvQ2hha3JhUHJvdmlkZXI+XG4gICAgPC9Qcm92aWRlcj5cbiAgKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgTXlBcHA7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/pages/_app.tsx\n");

/***/ })

})